# templet_nginx.conf

# the upstream component nginx needs to connect to
upstream templet {
    # Single Server
    # server unix:///home/diors/work/templet/templet/deploy/templet.sock; # for a file socket
    # Multi Server
    # server unix:///home/diors/work/templet/templet/deploy/templet.sock max_fails=0 weight=1; # for a file socket
    # server unix:///home/diors/work/templet/templet/deploy/templet2.sock max_fails=0 weight=1; # for a file socket
    server 127.0.0.1:8888; # for a web port socket (we'll use this first)
}

# configuration of the server
server {
    # the port your site will be served on
    listen      80;
    # the domain name it will serve for
    server_name .a.com; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # access_log off;  # 设置是否存储访问日志
    # access_log /var/log/nginx/templet_access.log;
    # error_log /var/log/nginx/templet_error.log;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # JS接口安全域名 & 业务域名 验证
    location /xxx.txt {
        alias /home/diors/work/templet/docs/we/xxx.txt;
    }

    # Django media
    location /media  {
        alias /home/diors/work/templet/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/diors/work/templet/collect_static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        # uwsgi_pass  templet;
        proxy_pass  http://templet;
        include     /home/diors/work/templet/templet/deploy/uwsgi_params; # the uwsgi_params file you installed
    }
}

# configuration of the server
server {
    # the port your site will be served on
    listen      443;
    # the domain name it will serve for
    server_name .a.com; # substitute your machine's IP address or FQDN
    charset     utf-8;

    # access_log /var/log/nginx/templet_ssl_access.log;
    # error_log /var/log/nginx/templet_ssl_error.log;

    ssl on;
    ssl_certificate   cert/214180103970874.pem;
    ssl_certificate_key  cert/214180103970874.key;
    ssl_session_timeout 5m;
    # worker process * exited on signal 11
    # 同一台服务器部署多个 SSL 转发，Nginx 默认是开启 Session 缓存的，导致冲突，验证不通过，连接直接退出
    # 解决方案：禁用 Ningx SSL Session 的缓存
    ssl_session_cache none;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;

    # max upload size
    client_max_body_size 75M;   # adjust to taste

    # JS接口安全域名 & 业务域名 验证
    location /xxx.txt {
        alias /home/diors/work/templet/docs/we/xxx.txt;
    }

    # Django media
    location /media  {
        alias /home/diors/work/templet/media;  # your Django project's media files - amend as required
    }

    location /static {
        alias /home/diors/work/templet/collect_static; # your Django project's static files - amend as required
    }

    # Finally, send all non-media requests to the Django server.
    location / {
        # uwsgi_pass  templet;
        proxy_pass  http://templet;
        include     /home/diors/work/templet/templet/deploy/uwsgi_params; # the uwsgi_params file you installed
    }
}
